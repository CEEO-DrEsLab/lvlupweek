 Our project was a “Mars Rover Salvage Operation” for kids. It consisted of a wireless robot-rover and a 3-piece controller. The goal of the “salvage” operation was to use the navigate the robot through rocks and move randomly distributed Lego wheels to a target zone. 

The final robot was essentially the same core components: a clawed robot on wheels controlled by a steering lever, a throttle, and a button. 

One major improvement was that it became wireless. Both EV3 bricks were connected to a laptop which processed information from both. 

Another major improvement was a controller feedback mechanism, which caused a lot of headaches during development. As the lever is pushed out of the dead zone, its angle of rotation is read. The angle has some mathematical operations performed on it and that value is then fed into the power block for that motor, pushing it in the opposite direction the user is pushing. This also makes the levers return to their home positions when released. However, during development we ran into an issue where the controllers would swing back so fast after being released that they would oscillate back and forth through the dead zone (like the classic physics problem of a ball being dropped down a tube through the center of the earth). We tried changing the way feedback was calculated, making the feedback less intense, and even making it a constant value no matter the position to no avail. Eventually we realized the angle value was being sent over bluetooth back to the laptop, operations performed, then the feedback value sent back to the lever motor,  and because it was taking so long wirelessly by the time a new feedback power value was sent to the lever it had already moved considerably. Hardwiring the controller brick to the computer while keeping the robot wireless resolved this issue. 

The claw also underwent substantial improvement. Not only is it sturdier, but it also raises and lowers in addition to using a worm gear setup to achieve a much stronger grip on objects.